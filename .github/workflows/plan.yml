name: Terraform Plan

on:
  pull_request:

env:
  aws_region: us-east-1
  terraform_version: 1.6.5
  terraform_directory: ./terraform
  terragrunt_version: 0.67.10
  tfvars_file_name: deploy.hcl
  pr_number: ${{ github.event.number }}
  eks_cluster_name: hexburger-eks-cluster
  ECR_REPOSITORY: hexburger-cliente
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
  SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Build with Maven
        run: mvn clean install -DskipTests
  test:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Run tests
        run: mvn test jacoco:report -Dmaven.javadoc.skip=true

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: target/site/jacoco/jacoco.xml

  sonar:
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Download coverage report
        uses: actions/download-artifact@v4
        with:
          name: coverage-report

      - name: Extract artifactId from pom.xml
        id: extract-artifact-id
        run: echo "ARTIFACT_ID=$(mvn help:evaluate -Dexpression=project.artifactId -q -DforceStdout)" >> $GITHUB_ENV

      - name: Build and analyze with SonarQube
        run: mvn verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar
          -Dsonar.projectKey=${{ env.ARTIFACT_ID }}
          -Dsonar.organization=postech-soat-hexburguer
          -Dsonar.host.url=https://sonarcloud.io
          -Dsonar.token=${{ secrets.SONAR_TOKEN }}
          -Dsonar.coverage.jacoco.xmlReportPaths=target/site/jacoco/jacoco.xml

  publish_ecr:
    needs: sonar
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Publish to ECR
        uses: ./.github/publish
        with:
          aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws_session_token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws_region: ${{ env.aws_region }}
          aws_account_id: ${{ secrets.AWS_ACCOUNT_ID }}

  terraform_plan:
    needs: publish_ecr
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == false
    steps:
      - uses: actions/checkout@v3

      - name: Terraform Plan
        uses: ./.github/plan
        with:
          terraform_version: ${{ env.terraform_version }}
          terraform_directory: ${{ env.terraform_directory }}
          pr_number: ${{ env.pr_number }}
          aws_region: ${{ env.aws_region }}
          aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws_session_token: ${{ secrets.AWS_SESSION_TOKEN }}
          github_token: ${{ secrets.MY_GITHUB_TOKEN }}
          terragrunt_version: ${{ env.terragrunt_version }}
          tfvars_file_name: ${{ env.tfvars_file_name }}
          eks_cluster_name: ${{ env.eks_cluster_name }}